import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { Newsletter } from "../components/layout/Newsletter";
import { Showcase } from "../components/Showcase";
import { GetServerSideProps } from "next";
import Client from "~/utils/Client";
import { FC } from "react";
import MostRead from "~/components/MostRead";
import CardSideImage from "~/components/common/CardSideImage";
import { Container } from "~/components/common/container";
import FeaturedCard from "~/components/common/FeaturedCard";
import FeaturedPostBody from "~/components/common/FeaturedPostBody";
import OtherPosts from "~/components/OtherPosts";
export interface Post {
  author: string;
  title: string;
  excerpt: string;
  category: string;
  subcategory: string;
  created_at: string;
  id: number;
  tags: string[];
  is_featured: boolean;
  image: string;
}

export type HomePageProps = {
  homeData: {
    most_read: Post[];
    posts: Post[];
  };
  loading: boolean;
};

const Home: FC<HomePageProps> = ({ homeData, loading }) => {
  console.log("loading", loading);
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Showcase />

        <MostRead posts={homeData.most_read} />

        {/* other posts */}
        <OtherPosts posts={homeData.posts} />
      </main>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {
  res.setHeader(
    "Cache-Control",
    "public, s-maxage=10, stale-while-revalidate=59"
  );
  let loading = true;
  let homeData = {
    most_read: [],
    posts: [],
  };
  try {
    let { data } = await Client.get("getHomeData");
    homeData = data;
    loading = false;
  } catch (error: any) {
    console.log(error?.response || error);
  }
  console.log(homeData);
  return {
    props: {
      loading,
      homeData,
    },
  };
};

export default Home;
